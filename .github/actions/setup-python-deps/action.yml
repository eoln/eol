name: 'Setup Python Dependencies'
description: 'Unified dependency installation for all test jobs'
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  test-type:
    description: 'Type of test (unit, integration, performance, coverage)'
    required: true
  working-directory:
    description: 'Working directory for installation'
    required: false
    default: 'packages/eol-rag-context'

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache pip packages and wheels
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.cache/uv
          ~/.local/share/uv
        key: ${{ runner.os }}-${{ inputs.python-version }}-pip-${{ inputs.test-type }}-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.python-version }}-pip-${{ inputs.test-type }}-
          ${{ runner.os }}-${{ inputs.python-version }}-pip-
          ${{ runner.os }}-pip-

    - name: Cache sentence transformer models
      if: inputs.test-type == 'integration' || inputs.test-type == 'coverage'
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/torch
          ~/.cache/huggingface
        key: ${{ runner.os }}-models-all-MiniLM-L6-v2
        restore-keys: |
          ${{ runner.os }}-models-

    - name: Install uv for fast dependency installation
      shell: bash
      run: |
        if ! command -v uv &> /dev/null; then
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        fi

    - name: Install base dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # Base dependencies for all test types
        uv pip install --system --compile-bytecode \
          pytest pytest-asyncio pytest-timeout pytest-xdist \
          -r requirements.txt

    - name: Install unit test dependencies
      if: inputs.test-type == 'unit'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        uv pip install --system --compile-bytecode \
          pytest-cov \
          sentence-transformers

    - name: Install integration test dependencies
      if: inputs.test-type == 'integration'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        uv pip install --system --compile-bytecode \
          pytest-cov \
          redis redisvl \
          sentence-transformers \
          aioredis \
          watchdog gitignore-parser

    - name: Install performance test dependencies
      if: inputs.test-type == 'performance'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        uv pip install --system --compile-bytecode \
          pytest-benchmark \
          sentence-transformers

    - name: Install coverage test dependencies
      if: inputs.test-type == 'coverage'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        uv pip install --system --compile-bytecode \
          pytest-cov \
          redis redisvl \
          sentence-transformers \
          aioredis

    - name: Pre-download models for integration tests
      if: inputs.test-type == 'integration' || inputs.test-type == 'coverage'
      shell: bash
      run: |
        python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('all-MiniLM-L6-v2')" || true
