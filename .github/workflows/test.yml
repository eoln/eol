name: Tests
on:
  push:
    branches: [ main, feat/*, fix/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Redis Stack
      run: |
        curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
        sudo apt-get update
        sudo apt-get install redis-stack-server
        
    - name: Install dependencies
      working-directory: ./packages/eol-rag-context
      run: |
        python -m pip install --upgrade pip uv
        uv pip install -e ".[test]"
        
    - name: Start Redis Stack
      run: redis-stack-server --daemonize yes
      
    - name: Run tests with coverage
      working-directory: ./packages/eol-rag-context
      run: |
        pytest tests/ --cov=eol.rag_context --cov-fail-under=80 --cov-report=xml --timeout=300
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.13'
      with:
        file: ./packages/eol-rag-context/coverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}