[project]
name = "eol"
version = "0.1.0"
description = "EOL AI Framework - Monorepo Root"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "GPL-3.0" }
authors = [
    { name = "EOLN.EU", email = "dev@eoln.eu" }
]

# Root dependencies (minimal, just for workspace management)
dependencies = []

[project.optional-dependencies]
dev = [
    "uv>=0.5.0",
    "pip-tools>=7.3.0",
    "pipdeptree>=2.13.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = []

# UV Workspace Configuration
[tool.uv.workspace]
members = ["packages/*"]

[tool.uv]

# Shared constraint dependencies for all workspace members
constraint-dependencies = [
    "pydantic>=2.11.7",
    "pydantic-settings>=2.1.0",
    "typer>=0.15.2",
    "rich>=13.9.4",
    "numpy>=1.26.0",
    "redis==5.1.0",
    "pytest==7.4.4",
]

[tool.uv.sources]
# Internal package references (path dependencies)
eol-core = { workspace = true }
eol-cli = { workspace = true }
eol-rag-context = { workspace = true }

# Python version management
[tool.uv.python]
managed = true
version = "3.11"

# Development settings
[tool.uv.pip]
index-url = "https://pypi.org/simple"
extra-index-url = []
find-links = []

# Tool configurations shared across workspace
[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | site
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
files = ["packages/*/src"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["packages/*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=packages",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "unit: Unit tests (no external dependencies)",
    "integration: Integration tests (requires external services)",
    "slow: Slow running tests",
    "redis: Tests requiring Redis",
]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]
exclude = [
    ".venv",
    "venv",
    "build",
    "dist",
    ".git",
    "__pycache__",
    "site",
]

[tool.coverage.run]
source = ["packages"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "ruff>=0.12.8",
]
